<!DOCTYPE html>
<html>
  <head id="head">
    <meta charset="UTF-8">
    <meta name="description" content="Zine: Fast, Scalable and Flexible Static Site Generator">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@croloris">
    <meta name="twitter:author" content="@croloris">
    <meta name="twitter:description" content="Zine: Fast, Scalable and Flexible Static Site Generator">
    <meta name="twitter:title" content="Devlog | Zine">
    <meta name="twitter:image" content="https://notmongo.opensourceworks.org/preview.png">
    <meta property="og:type" content="website">
    <meta property="og:title" content="Devlog | Zine">
    <meta property="og:image" content="https://notmongo.opensourceworks.org/preview.png">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title id="title">
      Devlog
      - Zine
    </title>
    <link rel="stylesheet" type="text/css" href="/fonts.css">
    <link rel="stylesheet" type="text/css" href="/fira_code.css">
    <link rel="stylesheet" type="text/css" href="/style.css">
    <link rel="stylesheet" type="text/css" href="/highlight.css">
    
  </head>
  <body>
    <nav id="menu" class="centered">
      <a href="/">Home</a>
      •
      <a href="/quickstart/">Get Started</a>
      •
      <a href="/docs/">Documentation</a>
      •
      <a href="/community/">Community</a>
      •
      <a href="/log/">Devlog</a>
      •
      <a href="https://github.com/kristoff-it/zine" target="_blank">
        Code
      </a>
    </nav>
    <div id="content">
      
  <style>
    h3.overtitle {
       margin-bottom: 0;
     }
     h1.title {
       margin-top: 0;
     }

		#page h2, #page h3 {
			text-align: left;
		}

		#page h2 {
			font-size: 1.7rem;
			border-bottom: 1px dashed #aaa;
			margin-top: 2em;
		}

		#page h3 {
			font-size: 1.5rem;
		}
    
		#page h4 {
			font-size: 1rem;
		}

	pre:has(.zig) {
	  overflow: hidden;
	  text-overflow: ellipsis;
	}
	pre:has(.superhtml) {
	  overflow: hidden;
	  text-overflow: unset;
	  overflow-x: auto;
	}
	pre:has(.sh) {
		color: #111;
		background-color: #ccc;
		padding: 5px 10px;
		text-align: center;
	}
	.sh {
		font-size: 0.8em;
	}

    #page>div[id] {
		padding: 1px 30px;
	}

	
    #old {
		padding: 0 !important;
	}

	div[id]:target {
	  animation: pulse-div 2s ease-in-out 1 forwards;
	}

	@keyframes pulse-div {
	  0%,
	  100% {
	    background-color: #222;
	  }

	  50% {
	    background-color: #111;
	  }
	}
  </style>
  <h3 class="overtitle centered">Zine</h3>
  <h1 class="title">Devlog</h1>
  <div id="page">
    <div id=about><h2>About</h2><p>This is a non-exhaustive, curated list of changes meant to help users quickly see what has improved since they last checked.</p><p>You can <a href="https://zine-ssg.io/log/index.xml" target="_blank">subscribe to this page via RSS</a>.</p><p>To update Zine to the latest release run:</p><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.6.3&quot;
</code></pre>
<h2>Changes</h2></div>
    
    
  
    
    
      <div id="v0.6.3">
        <h3><a href="#v0.6.3">v0.6.3</a></h3>
        <h4>2024-09-19</h4>
        <div id=v0.6.3><ul><li>When iterating <strong>content sections</strong> with <code>$page.contentSections()</code>, you can now obtain the section's attached heading by calling <a href="/docs/superhtml/scripty/#ContentSection.heading"><code>heading</code></a> or <a href="/docs/superhtml/scripty/#ContentSection.heading?"><code>heading?</code></a> on it. This was added mainly to support the usecase of giving titles to RSS entries generated from sections.</li></ul></div>
      </div>
    
    
  
    
    
      <div id="v0.6.2">
        <h3><a href="#v0.6.2">v0.6.2</a></h3>
        <h4>2024-09-17</h4>
        <div id=v0.6.2><ul><li><code>$image.linked()</code> is now implemented and allows you to quickly create an image that links to itself.</li></ul></div>
      </div>
    
    
  
    
    
      <div id="v0.6.1-vscode">
        <h3><a href="#v0.6.1-vscode">v0.6.1-vscode</a></h3>
        <h4>2024-09-07</h4>
        <div id=v0.6.1-vscode><ul><li>The VSCode marketplace now has a <a href="https://marketplace.visualstudio.com/items?itemName=LorisCro.supermd" target="_blank">SuperMD Extension</a> that gives you syntax highlighting for SuperMD files (no LSP for it yet though, sorry!).</li><li>Similarly, the VSCode <a href="https://marketplace.visualstudio.com/items?itemName=LorisCro.superhtml" target="_blank">SuperHTML Extension</a> would not provide you with syntax highlighting before, but now it does.</li></ul></div>
      </div>
    
    
  
    
    
      <div id="v0.6.1">
        <h3><a href="#v0.6.1">v0.6.1</a></h3>
        <h4>2024-09-07</h4>
        <div id=v0.6.1><ul><li>Updated <a href="https://github.com/rockorager/zeit" target="_blank"><code>rockorager/zeit</code></a>, which now includes full support for date formatting strings based on the Go magic date. Previously Zine hardcoded only a very small subset of possible formatting styles. See the reference docs for <a href="https://zine-ssg.io/docs/superhtml/scripty#Date.format" target="_blank"><code>Date.format</code></a> for more info.</li></ul></div>
      </div>
    
    
  
    
    
      <div id="v0.6.0">
        <h3><a href="#v0.6.0">v0.6.0</a></h3>
        <h4>2024-09-06</h4>
        <div id=v0.6.0><ul><li><p>Added <code>Page.parentSection()</code> in SuperHTML.</p></li><li><p>The website now has a docs section <a href="https://zine-ssg.io/docs/editors/" target="_blank">for editor support</a>.<br>Follow those instructions to get syntax highlighting and LSP support in your favorite editor.<br><strong>If you have trouble setting up your editor feel free to <a href="https://zine-ssg.io/community/" target="_blank">ask for help in the community</a></strong>.</p></li></ul></div>
      </div>
    
    
  
    
    
      <div id="v0.5.1">
        <h3><a href="#v0.5.1">v0.5.1</a></h3>
        <h4>2024-09-04</h4>
        <div id=v0.5.1><ul><li><p>Added typst syntax highlighting support.</p></li><li><p>On the topic of RSS feeds, this page <a href="https://zine-ssg.io/log/index.xml" target="_blank">now has an RSS feed</a> that you can subscribe to. Every entry in this devlog will become an entry in the RSS feed. If you're curious to see how this is implemented, clone this repo and see how <code>content/log.smd</code> and <code>layouts/log.xml</code> work together to make it happen (see <a href="/quickstart/">Get Started</a> for more info).</p></li><li><p><code>Page</code> in SuperHTML gained the ability to loop over sections defined by a Page.</p></li><li><p>SuperMD Directives can now store data (key-value fields) that can then be accessed programmtically by SuperHTML.</p></li></ul></div>
      </div>
    
    
  
    
    
      <div id="v0.5.0">
        <h3><a href="#v0.5.0">v0.5.0</a></h3>
        <h4>2024-09-01</h4>
        <div id=v0.5.0><ul><li><p>Added <a href="/docs/superhtml/scripty/#Build"><code>$build.generated</code></a> which evaluates to the date in which the build is taking place. It doesn't add a dependency on the current date so a page will only display a newer date if it actually gets regenerated.</p><p>Useful for example to set <code>lastBuildDate</code> in RSS feeds. Note that without caching the date will always be updated, potentially resulting in unwanted behavior.</p></li></ul></div>
      </div>
    
    
  
    
    
    
      <div id="old"><div id=old><h3>2024-08-30 (later in the day)</h3><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.4.7&quot;
</code></pre>
<ul><li>Fix an off by one error that gave the wrong value to <code>Iterator.last</code></li></ul><h3>2024-08-30 (later in the day)</h3><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.4.6&quot;
</code></pre>
<ul><li>Fix a bug caused page-local assets to be installed in the wrong place</li></ul><h3>2024-08-30 (later in the day)</h3><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.4.5&quot;
</code></pre>
<ul><li>Fix off-by-one error in some iterators (eg in <code>$page.tags</code>)</li></ul><h3>2024-08-30 (later in the day)</h3><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.4.4&quot;
</code></pre>
<ul><li>Introduced support for captions directly in Markdown link / image syntax. See the updated SuperMD docs for more details.</li><li>Fixed a bug that prevented users from accessing <code>$if</code> in the intended way.</li><li>Some SuperMD Scripty reference docs were improved.</li></ul><h3>2024-08-30 (later in the day)</h3><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.4.3&quot;
</code></pre>
<p>Fixes a printing bug related to Int values.</p><h3>2024-08-30</h3><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.4.2&quot;
</code></pre>
<p>Fixes a bug that prevented users from accessing <code>$loop</code> in the intended way.</p><h3>2024-08-29 (later in the day)</h3><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.4.1&quot;
</code></pre>
<p>Fixes a silly but annoyng bug where SuperMD links nested inside of styiling elements would not get analyzed.</p><h3>2024-08-29</h3><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.4.0&quot;
</code></pre>
<p><strong>The SuperMD update!</strong></p><p><strong>With this release Zine is now at a point where the development experience is representative of what the final product will look like.</strong></p><p>Error messages need to be improved and a lot of developer tooling is still missing, so take that into account, but the core authoring process is now mostly there.</p><p><strong>Zine is also now featureful enough to begin the porting process for the official Zig website!</strong></p><div class="block"><h1>Note</h1><p>This is going to be the last hugely breaking update to Zine in a while, so it's a good moment to try Zine out if the fear of breaking changes has prevented you from attempting before.</p><p>Breaking changes will still keep coming, don't worry, but for a while they will be almost exclusively minor changes that will require little work on your part.</p><p>Relatedly, I will be at <a href="https://2024.squiggleconf.com/sessions#talk-loris-cro" target="_blank">SquiggleConf this October to talk about Zine</a> and related work.</p></div><p>Now onto new features and breaking changes:</p><ul><li><p>This website has been updated with <strong>a lot of new documentation</strong>. The <a href="/docs/">docs section</a> will now be able to guide you from getting the first few steps of creating a zine website, all the way to learning more advanced concepts.</p></li><li><p>The Scripty reference page that was very incomplete in the past has been improved heavily. Additionally, now there are two references: one for <a href="/docs/supermd/scripty/">SuperMD</a> and one for <a href="/docs/superhtml/scripty/">SuperHTML</a>.</p></li><li><p><strong>SuperMD comes with a ton of new features</strong>, too many to fully list here, but here are some highlights:</p><ul><li><p>A page can now define content sections that can be rendered separately by the layout. This is huge, so check out the <a href="/docs/supermd/">SuperMD Basics</a> page for more information.</p></li><li><p>You can now give ids to headings and other elements to enable deep-linking (which will be also checked by Zine!), and you can also give classes for styling purposes.</p></li><li><p>Did you notice the "NOTE" block above? SuperMD has the concept of blocks, which make it super easy to include something like that in your content without needing to rely on inlined HTML.</p><div class="block warning"><h1>So cool</h1><p>These blocks can also be nested and styled!</p></div></li><li><p>Inlined HTML is forbidden now btw, but there's an escape hatch for when you need to embed stuff like YouTube videos. See the SuperHTML docs page for more info.</p></li><li><p>Unfortunately we don't have any tooling for SuperMD available just yet, but it's high up in the list of priorities so stay tuned for updates in the near future.</p></li></ul></li><li><p>Now that we have SuperMD, the file extension for content files has changed to <code>.smd</code>.<br>If you need to update your Zine site and have a lot of markdown files, our friendly neighborhood LLM suggests to use this command to bulk rename all (run it inside your content dir):</p><pre><code>find . -type f -name &quot;*.md&quot; -exec bash -c &apos;mv &quot;$0&quot; &quot;${0%.md}.smd&quot;&apos; {} \;
</code></pre></li><li><p>The logic attributes in SuperHTML (<code>if</code>, <code>loop</code>, <code>var</code>) have been renamed:</p><ul><li><code>:if</code>, <code>:loop</code> are still the same, they just gained a colon prefix</li><li><code>:text</code> and <code>:html</code> replace <code>var</code>. The first escapes HTML, while the second doesn't</li><li><code>inline-loop</code> doesn't exist anymore because now we have <code>&lt;ctx&gt;</code></li></ul></li><li><p>Introducing <code>&lt;ctx&gt;</code>: a special tag that allows you to create a phantom element that doesn't render to anything. This element effectively allows you to implement what <code>inline-loop</code> was doing for you before, and more.</p><p>Another cool feature of <code>&lt;ctx&gt;</code> is that defining attributes on it makes them available as fields under <code>$ctx</code>. See the SuperHTML docs page for more info.</p></li></ul><h3>2024-08-03</h3><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.3.0&quot;
</code></pre>
<p><strong>The Asset System update!</strong></p><ul><li><p>Zine has now an asset system with clearly defined semantics. Previously we kinda implemented informally what other static site generators offered (eg a static asset directory), while now Zine gained it's own spin on assets</p><p>There's a new <a href="/docs/assets/">Assets section in the docs</a>, read it to learn how assets now work in Zine. The most notable changes are:</p><ul><li>Zine can now make use of artifacts generated via the Zig build system!</li><li><code>static_dir_path</code> has become <code>assets_dir_path</code> (I also recommend renaming <code>static</code> to <code>assets</code>)</li><li>Page assets (eg images placed in the content directory next to the page they belong to) <strong>now have one extra rule for file placement</strong>, see the docs for more info on that (or let the error messages <em>gently</em> guide you)</li></ul></li><li><p>The dev server now by default opens a <strike>door</strike> port to 1990 if you don't specify <code>-Dport</code></p></li><li><p><code>output_prefix</code> has been renamed to <code>output_path_prefix</code></p></li><li><p>In <code>MultilingualSite</code>, <code>variants</code> has been renamed to <code>localized variants</code></p></li><li><p>Scripty has gained a new <code>Asset</code> type and handful of new builtins, including adding the ability to query for the current <code>locale_code</code> in a multilingual website (<code>$site.localeCode()</code>)</p></li></ul><h3>2024-07-27</h3><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.2.0&quot;
</code></pre>
<p><strong>The build system flexibility update (part 1)!</strong></p><ul><li><p>Upgrading from v0.1: in your <code>build.zig</code> change <code>try zine.addWebsite</code> to <code>zine.website</code>.</p></li><li><p><code>addWebsite</code> and <code>addMultilingualWebsite</code> have been renamed to <code>website</code> and <code>multilingualWebsite</code> respectively (and now don't return an error anymore)</p></li><li><p>To align with <code>std.Build</code>'s naming convention (where 'add' functions create steps but don't wire them to the default install step), <code>addWebsite</code> and <code>addMultilingualWebsite</code> are now more low-level functions for defining build pipelines that allow you to customize more things:</p><ul><li><strong>You can have other build steps depend on the website being built</strong></li><li><strong>You can specify if and how the development webserver is bound to a named step</strong></li><li>et cetera</li></ul><p>To learn how to use this more fine-grained API, look at the implementation of <code>website</code> and <code>multilingualWebsite</code>.</p></li><li><p>As suspected, in the last release I did not proprely wire the dependency on <code>zig-afl-kit</code> as a lazy dependency and that caused build errors to some. This is now fixed in this release. Sorry!</p></li></ul><p><em>The next item on the roadmap is to add an asset system to Zine in order to have the static content generation depend on other steps defined in your build script.</em></p><h3>2024-07-26</h3><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.1.3&quot;
</code></pre>
<ul><li><p>Scripty strings now have <code>eql</code>, <code>contains</code> and <code>endsWith</code>. With a pinch of creativity you  can create menus that style differently the current active page:</p><pre><code class="superhtml"><span class="punctuation bracket">&lt;</span><span class="special">div</span> <span class="attribute">class</span><span class="punctuation delimiter">=</span><span class="string">&quot;</span><span class="string">$page.permalink().endsWith(&apos;/blog/&apos;).then(&apos;selected&apos;, &apos;&apos;)</span><span class="string">&quot;</span><span class="punctuation bracket">&gt;</span>
  Blog
<span class="punctuation bracket">&lt;/</span><span class="special">div</span><span class="punctuation bracket">&gt;</span>
</code></pre>
<p>Similarly, when printing out the list of pages in a section, you can filter-out occasional "miscellaneous" pages (as in belonging to the same section but unwanted in the current list):</p><pre><code class="superhtml"><span class="punctuation bracket">&lt;</span><span class="special">div</span> <span class="attribute">loop</span><span class="punctuation delimiter">=</span><span class="string">&quot;</span><span class="string">$page.subpages()</span><span class="string">&quot;</span><span class="punctuation bracket">&gt;</span>
  <span class="punctuation bracket">&lt;</span><span class="tag">div</span> <span class="attribute">if</span><span class="punctuation delimiter">=</span><span class="string">&quot;</span><span class="string">$loop.it.permalink().contains(&apos;/blog/&apos;)</span><span class="string">&quot;</span><span class="punctuation bracket">&gt;</span>
    <span class="punctuation bracket">&lt;</span><span class="tag">a</span> <span class="attribute">href</span><span class="punctuation delimiter">=</span><span class="string">&quot;</span><span class="string">$loop.it.permalink() var=</span><span class="string">&quot;</span><span class="attribute">$loop.it.title</span><span class="string">&quot;</span><span class="punctuation bracket">&gt;</span><span class="punctuation bracket">&lt;/</span><span class="special">a</span><span class="punctuation bracket">&gt;</span>
  <span class="punctuation bracket">&lt;/</span><span class="special">div</span><span class="punctuation bracket">&gt;</span>
<span class="punctuation bracket">&lt;/</span><span class="special">div</span><span class="punctuation bracket">&gt;</span>
</code></pre>
</li><li><p>The <a href="https://github.com/kristoff-it/superhtml" target="_blank">SuperHTML CLI tool</a> was updated with two new commands:</p><ul><li><code>check</code>: checks HTML and SuperHTML template files for syntax errors, useful if you don't have / want LSP integration (see also <code>fmt</code> in such case).</li><li><code>interface</code>: prints out the interface of a given SuperHTML template file, useful to bootstrap a new SuperHTML template that extends another.</li></ul></li><li><p>Zine and some of its dependencies depend on <a href="https://github.com/kristoff-it/zig-afl-kit" target="_blank">kristoff-it/zig-afl-kit</a> for fuzzing. I tried now to make it a lazy dependency so that users don't have to download it just to use Zine (as it's a dev-only dependency), but I haven't yet been able to fully test if I did so correctly.</p></li></ul><h3>2024-07-25</h3><pre><code class="sh">zig fetch --save &quot;git+https://github.com/kristoff-it/zine#v0.1.0&quot;
</code></pre>
<p><strong>Zine has finally reached a first tagged release!</strong></p><p>A lot has happened in these 4 months, so read this changelog to learn how to upgrade your Zine website.</p><p>The first thing that changed is the recommended way of updating your <code>build.zig.zon</code>.</p><p>The second is that Zine now tracks the latest stable version of Zig, which is 0.13.0 at the moment of writing.</p><p>Now onto new features and breaking changes:</p><ul><li><p>The recommended GitHub Actions Workflow files for building Zine websites on Github have changed. The new version uses the <a href="https://github.com/marketplace/actions/setup-zig-compiler" target="_blank">mlugg/setup-zig@v1</a> action that will automatically manage caching for you. It is <strong>highly recommended</strong> to update your scripts.</p><ul><li>While you're at it, change <code>--summary all</code> to <code>--summary new</code>, which will only list the pages that were rebuilt.</li></ul></li><li><p><a href="https://github.com/kristoff-it/superhtml" target="_blank">SuperHTML</a> (Zine's templating language) dropped Tree Sitter as its HTML parser in favor of a handcrafted implementation that more closely follows the HTML5 spec. This brings us <strong>significantly</strong> improved error messages and other advantages.</p><ul><li><p><a href="https://github.com/kristoff-it/superhtml" target="_blank">It's <strong>highly</strong> recommended you install and configure SuperHTML</a> as your language server for both HTML and SuperHTML Templates <strong>in order to get in-editor diagnostics and kickass autoformatting</strong>. The repo also offers a Tree Sitter grammar for SuperHTML that incudes a few visual improvements for tags and attributes that have semantic meaning.</p><p>SuperHTML also has a <a href="https://marketplace.visualstudio.com/items?itemName=LorisCro.super" target="_blank">VSCode extension</a>.</p></li><li><p>SuperHTML follows the HTML5 spec much more closely and, while writing an HTML parser from scratch for it, I learned that self-closing tags (tags with a final <code>/</code>) are not a thing in HTML5, so now <code>&lt;extend&gt;</code> and <code>&lt;super&gt;</code> have been defined as <a href="https://developer.mozilla.org/en-US/docs/Glossary/Void_element" target="_blank">void elements</a> in SuperHTML and want no final slash nor closing tag.</p><p>Note that SuperHTML will consider an error using self-closing tags in HTML (outside of a <code>&lt;svg&gt;</code> scope).</p></li><li><p>The correct file extension for templates is <code>.shtml</code>. <strong>You must rename all your templates to the new file extension</strong> otherwise you will get an error from SuperHTML when it sees non-HTML compliant syntax, since <code>&lt;extend&gt;</code> and <code>&lt;super&gt;</code> are recognized as void elements only in SuperHTML template files.</p></li></ul></li><li><p>Scripty has impoved as well: inside of nested loops, it is now possible to access outer <code>$loop</code> variables by doing <code>$loop.up()</code>. Each call to <code>up()</code> goes up one level.</p><ul><li>This is thanks to the fact that interrupts were implemented in Scripty, opening the door to features that rely on the ability to pass from the outside values into scripty (<code>up()</code> relies on that since loops are a SuperHTML concept that Scripty is completely unaware of).</li></ul></li><li><p>For syntax highlighting, Zine uses a distribution of Tree Sitter that bundles a lot of grammars and highlighting queries from <a href="https://github.com/neurocyte/flow" target="_blank">Flow Control</a>. The dependency has now been updated to a new version that adds support for more languages.</p></li></ul><p>That's mostly it. If you encounter bugs while updating, please don't hesitate to open a <a href="https://github.com/kristoff-it/zine/issues" target="_blank">new issue on GitHub</a> <strong>with a link to a reproduction</strong>.</p><h3>2024-03-26</h3><pre><code class="zig"><span class="punctuation delimiter">.</span><span class="variable builtin">url</span> = <span class="string">&quot;git+https://github.com/kristoff-it/zine#e33a1d79b09e8532db60347a7ec4bd3413888977&quot;</span><span class="punctuation delimiter">,</span>
<span class="punctuation delimiter">.</span><span class="variable builtin">hash</span> = <span class="string">&quot;12209f9be74fcc805c0f086e4a81ccca041354448f5b3592e04b6a6d1b4a95da5a26&quot;</span><span class="punctuation delimiter">,</span>
</code></pre>
<ul><li>Added support for multilingual websites. See the <a href="/docs/i18n/">corresponding docs page</a> for more info. Because of this change now the <code>AddWebsiteOptions</code> struct is slightly different, here's how to fix it:<ul><li>Take the contents of <code>site</code> and move them top level, rename <code>base_url</code> to <code>host_url</code>.</li></ul></li><li>Related-but-distinct from the above, you can now specify an output prefix for your static site. The feature was added primarily for i18n purposes but can also be used in simple websites to add an arbitrary prefix.</li><li>The markdown renderer now renders tables!</li><li>Fixed a crash in the dev server that would trigger when refreshing the page multiple times in quick succession (the crash was related to websockets). There's still one remaining known bug related to this same problem though.</li><li>The dev server now works on Windows (thanks Parzival-3141)</li><li>New Scripty builtins:<ul><li>Strings<ul><li><code>addPath()</code> similar to <code>suffix</code> but knows when to add a <code>/</code> or not.</li><li><code>fmt()</code> replaces occurrences of <code>{}</code> in your strings with the provided string arguments.</li></ul></li><li>Maps, refined the <code>get</code> family of functions<ul><li><code>get(key, fallback)</code> allows to get a key from a map and provide a fallback value</li><li><code>get!(key)</code> errors out if the key doesn't exist</li><li><code>get?(key)</code> returns null if the value is missing, to be used in conjunction with <code>if</code> attributes.</li></ul></li></ul></li></ul><h3>2024-03-21</h3><pre><code class="zig"><span class="punctuation delimiter">.</span><span class="variable builtin">url</span> = <span class="string">&quot;git+https://github.com/kristoff-it/zine#ecc72eb042af07f5b4690a35a7ca1dd9c6fd5b61&quot;</span><span class="punctuation delimiter">,</span>
<span class="punctuation delimiter">.</span><span class="variable builtin">hash</span> = <span class="string">&quot;1220610a18236cd32936502bd7e762743e89ef70408638675420e453be41f1e83de4&quot;</span><span class="punctuation delimiter">,</span>
</code></pre>
<ul><li>Changed datetime library to <a href="https://github.com/rockorager/zeit/" target="_blank">rockorager/zeit</a>.</li><li>If you put a <code>@date(&quot;...&quot;)</code> literal in your custom fields, it will be recognized as a date by Zine.</li><li>A few improvements to bulitins:<ul><li><code>get?()</code>, <code>get!()</code> and <code>get()</code>: different ways of getting values out of Ziggy maps (i.e. custom fields).</li><li><code>then()</code> on booleans now gives you the ability to create if-then-else expressions.</li><li><code>gt</code> on integers.</li><li><code>lt</code>, <code>eq</code>, <code>gt</code> on dates.</li></ul></li></ul><h3>2024-03-20</h3><pre><code class="zig"><span class="punctuation delimiter">.</span><span class="variable builtin">url</span> = <span class="string">&quot;git+https://github.com/kristoff-it/zine#d06884ec657abe87ab4f408b5dc3f336a6dcea9b&quot;</span><span class="punctuation delimiter">,</span>
<span class="punctuation delimiter">.</span><span class="variable builtin">hash</span> = <span class="string">&quot;1220d3bc95a5343918d69d3478f27ebb4abe14613c159737af64cd2185151efd2fa1&quot;</span><span class="punctuation delimiter">,</span>
</code></pre>
<ul><li><strong>Zine now uses <a href="https://ziggy-lang.io" target="_blank">Ziggy</a> as the frontmatter language!</strong> In the near future Zine will develop tooling for editing ziggy-markdown files. In the meantime consider downloading the Ziggy CLI tool for a smoother editing experience if you plan to use Ziggy directly.</li><li>Added an initial version of sections to Zine! See the updated documentation section for more information about that. Beware that <code>$site.pages()</code> was removed in favor of the new system.</li><li>Added a the ability to define <code>alternatives</code> in the frontmatter of a page. Alternatives allow you to specify multiple layouts to apply to the same piece of content. Useful for generating RSS feeds.</li><li>Added syntax highlighting to layouts: now strings have a <code>syntaxHighlight</code> builtin.</li><li>Updated Zig version because <a href="https://github.com/ziglang/zig/pull/19224" target="_blank">a bugfix</a> was needed to add syntax highlighting to templates. Now Zine depends on Zig <code>0.12.0-dev.3381+7057bffc1</code> and above. Make sure to update your GitHub Actions workflows accordingly.</li></ul><h3>2024-03-08</h3><pre><code class="zig"><span class="punctuation delimiter">.</span><span class="variable builtin">url</span> = <span class="string">&quot;git+https://github.com/kristoff-it/zine.git#4b3efd178cb6ee9af3c864fa980ad0499823aac6&quot;</span><span class="punctuation delimiter">,</span>
<span class="punctuation delimiter">.</span><span class="variable builtin">hash</span> = <span class="string">&quot;1220f6920dbb9540cc9013bbaa1621d62ef79aabadcbb6f7b9f45e415de815d15404&quot;</span><span class="punctuation delimiter">,</span>
</code></pre>
<ul><li>Added syntax highlighting support via tree-sitter. Most code snippets of this website have now gained syntax highlighting. No themes are provided for now and it's expected that you define your own CSS from scratch. See <code>hightlight.css</code> from this website for an idea on how to proceed.</li><li>Updated Zig version because of a recent breaking change related to <code>std.http</code>. Now Zine depends on Zig <code>0.12.0-dev.3161+377ecc6af</code> and above. Make sure to update your GitHub Actions workflows accordingly.</li></ul><h3>2024-02-13</h3><ul><li>Overhauled the documentation page. Now  it's a little bit easier to get started with Zine.</li><li>Added deployment guides: <a href="/docs/deploying/github-pages/">one for GitHub Pages</a> and <a href="/docs/deploying/cloudflare-pages/">one for Cloudflare Pages</a> (thanks <code>ninja_tron</code>!)</li><li>Started work on the JSON replacement for better frontmatters, <a href="https://discord.gg/B73sGxF" target="_blank">join the Discord server</a> or <a href="https://twitch.tv/kristoff_it" target="_blank">catch me live on Twitch</a> for related discussion & sneak peeks.</li></ul><h3>2024-02-11</h3><pre><code class="zig"><span class="punctuation delimiter">.</span><span class="variable builtin">url</span> = <span class="string">&quot;git+https://github.com/kristoff-it/zine.git#beb5434a04fad660ecf8db8379532dfe5b5e13b0&quot;</span><span class="punctuation delimiter">,</span>
<span class="punctuation delimiter">.</span><span class="variable builtin">hash</span> = <span class="string">&quot;12203c37cb5fb3931d3b7d1f1dace46cf5329ffe2fb5a8d2ac87dc78630ce7f601a7&quot;</span><span class="punctuation delimiter">,</span>
</code></pre>
<ul><li>Updated Zig version because of a recent breaking change related to <code>std.Options</code> / <code>root.std_options</code>. Now Zine depends on Zig <code>0.12.0-dev.2701+d18f52197</code> and above. Consider using <a href="https://github.com/marler8997/zigup" target="_blank">marler8997/zigup</a> if you're not building Zig from source.</li><li>The Scripty reference documentation was improved slightly: the reference for <code>Page</code> displays which fields have default values and which do not.</li><li>The dev server is now better at reporting build errors: in the event of a build error the message will be shown in the terminal, as well as being shown on the web page, and the 404 page too will connect to the hot-reloading mechanism in order to show build errors.</li></ul><h3>2024-02-09 (later in the day)</h3><pre><code class="zig"><span class="punctuation delimiter">.</span><span class="variable builtin">url</span> = <span class="string">&quot;git+https://github.com/kristoff-it/zine.git#da7c32c2c253f6b0dbd392006055598feb07410b&quot;</span><span class="punctuation delimiter">,</span>
<span class="punctuation delimiter">.</span><span class="variable builtin">hash</span> = <span class="string">&quot;1220e6580fdbd0a56a97300bab938f61fe3b5b35fc7755a150db267422cf554ab299&quot;</span><span class="punctuation delimiter">,</span>
</code></pre>
<ul><li>When running the dev server (<code>zig build serve</code>), Zine will now show build error messages inside of the web page itself using the hot reload mechanism. Fix the build error and the error overlay will disappear. Error messages are ugly for now  (<a href="https://github.com/kristoff-it/zine/issues/16" target="_blank">#16</a>).</li></ul><h3>2024-02-09</h3><pre><code class="zig"><span class="punctuation delimiter">.</span><span class="variable builtin">url</span> = <span class="string">&quot;git+https://github.com/kristoff-it/zine.git#527762348ef104dce601f52bca9f958a511ff11b&quot;</span><span class="punctuation delimiter">,</span>
<span class="punctuation delimiter">.</span><span class="variable builtin">hash</span> = <span class="string">&quot;122018fb2b0ba1479ae28bacf3839d38da69044b006068fd67b1b7f4425114bec8d1&quot;</span><span class="punctuation delimiter">,</span>
</code></pre>
<ul><li>Zine will now stop erroring out in the presence of empty markdown files. It will instead print a warning and ignore them. Now you can <code>touch</code> a bunch of files and fill them out as you make progress, without losing hot reloading in the meantime.</li></ul><h3>2024-02-08</h3><pre><code class="zig"><span class="punctuation delimiter">.</span><span class="variable builtin">url</span> = <span class="string">&quot;git+https://github.com/kristoff-it/zine.git#eaa23f2d3a80868251302a1b979dbcc7e5b81d3a&quot;</span><span class="punctuation delimiter">,</span>
<span class="punctuation delimiter">.</span><span class="variable builtin">hash</span> = <span class="string">&quot;1220230f7c6abf655ef9b1ec14161bd1c15e55afd14ceaedfe2e0e9cc2471b1dd0ca&quot;</span><span class="punctuation delimiter">,</span>
</code></pre>
<ul><li>Removed the <code>_index.md</code> vs <code>index.md</code> naming convention. Now it's always <code>index.md</code> and you can use the <code>skip_subdirs</code> frontmatter property to get the old behavior. See the docs for more information.</li></ul></div></div>
    
  </div>

    </div>
  </body>
</html>